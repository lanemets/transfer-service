/*
 * This file is generated by jOOQ.
*/
package jooq.generated.money_transfer_schema.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.money_transfer_schema.Keys;
import jooq.generated.money_transfer_schema.MoneyTransferSchema;
import jooq.generated.money_transfer_schema.tables.records.AccountBalanceHistoryRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountBalanceHistory extends TableImpl<AccountBalanceHistoryRecord> {

    private static final long serialVersionUID = -1910213062;

    /**
     * The reference instance of <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY</code>
     */
    public static final AccountBalanceHistory ACCOUNT_BALANCE_HISTORY = new AccountBalanceHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountBalanceHistoryRecord> getRecordType() {
        return AccountBalanceHistoryRecord.class;
    }

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY.EVENT_ID</code>.
     */
    public final TableField<AccountBalanceHistoryRecord, Long> EVENT_ID = createField("EVENT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR MONEY_TRANSFER_SCHEMA.SYSTEM_SEQUENCE_A42D5F05_2B68_49EE_B646_9036B97972EA)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY.ACCOUNT_ID</code>.
     */
    public final TableField<AccountBalanceHistoryRecord, Long> ACCOUNT_ID = createField("ACCOUNT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY.BALANCE</code>.
     */
    public final TableField<AccountBalanceHistoryRecord, BigDecimal> BALANCE = createField("BALANCE", org.jooq.impl.SQLDataType.DECIMAL.precision(65535, 32767), this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY.TIMESTAMP</code>.
     */
    public final TableField<AccountBalanceHistoryRecord, Timestamp> TIMESTAMP = createField("TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY</code> table reference
     */
    public AccountBalanceHistory() {
        this("ACCOUNT_BALANCE_HISTORY", null);
    }

    /**
     * Create an aliased <code>MONEY_TRANSFER_SCHEMA.ACCOUNT_BALANCE_HISTORY</code> table reference
     */
    public AccountBalanceHistory(String alias) {
        this(alias, ACCOUNT_BALANCE_HISTORY);
    }

    private AccountBalanceHistory(String alias, Table<AccountBalanceHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountBalanceHistory(String alias, Table<AccountBalanceHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MoneyTransferSchema.MONEY_TRANSFER_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AccountBalanceHistoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACCOUNT_BALANCE_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountBalanceHistoryRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountBalanceHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountBalanceHistoryRecord>>asList(Keys.CONSTRAINT_A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountBalanceHistory as(String alias) {
        return new AccountBalanceHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountBalanceHistory rename(String name) {
        return new AccountBalanceHistory(name, null);
    }
}
