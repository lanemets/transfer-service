/*
 * This file is generated by jOOQ.
*/
package jooq.generated.money_transfer_schema.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.money_transfer_schema.Keys;
import jooq.generated.money_transfer_schema.MoneyTransferSchema;
import jooq.generated.money_transfer_schema.tables.records.TxnRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Txn extends TableImpl<TxnRecord> {

    private static final long serialVersionUID = -1944008831;

    /**
     * The reference instance of <code>MONEY_TRANSFER_SCHEMA.TXN</code>
     */
    public static final Txn TXN = new Txn();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TxnRecord> getRecordType() {
        return TxnRecord.class;
    }

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.TXN.TXN_ID</code>.
     */
    public final TableField<TxnRecord, Long> TXN_ID = createField("TXN_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR MONEY_TRANSFER_SCHEMA.SYSTEM_SEQUENCE_DC14D967_96B4_42F8_867C_A8E763B670F9)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.TXN.FROM_ACCOUNT</code>.
     */
    public final TableField<TxnRecord, Long> FROM_ACCOUNT = createField("FROM_ACCOUNT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.TXN.TO_ACCOUNT</code>.
     */
    public final TableField<TxnRecord, Long> TO_ACCOUNT = createField("TO_ACCOUNT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.TXN.AMOUNT</code>.
     */
    public final TableField<TxnRecord, BigDecimal> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.DECIMAL.precision(65535, 32767), this, "");

    /**
     * The column <code>MONEY_TRANSFER_SCHEMA.TXN.TIMESTAMP</code>.
     */
    public final TableField<TxnRecord, Timestamp> TIMESTAMP = createField("TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>MONEY_TRANSFER_SCHEMA.TXN</code> table reference
     */
    public Txn() {
        this("TXN", null);
    }

    /**
     * Create an aliased <code>MONEY_TRANSFER_SCHEMA.TXN</code> table reference
     */
    public Txn(String alias) {
        this(alias, TXN);
    }

    private Txn(String alias, Table<TxnRecord> aliased) {
        this(alias, aliased, null);
    }

    private Txn(String alias, Table<TxnRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MoneyTransferSchema.MONEY_TRANSFER_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TxnRecord, Long> getIdentity() {
        return Keys.IDENTITY_TXN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TxnRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TxnRecord>> getKeys() {
        return Arrays.<UniqueKey<TxnRecord>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TxnRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TxnRecord, ?>>asList(Keys.CONSTRAINT_14, Keys.CONSTRAINT_146);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Txn as(String alias) {
        return new Txn(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Txn rename(String name) {
        return new Txn(name, null);
    }
}
