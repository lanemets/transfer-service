/*
 * This file is generated by jOOQ.
*/
package jooq.generated.money_transfer_schema.tables.records;


import javax.annotation.Generated;

import jooq.generated.money_transfer_schema.tables.Account;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -188947595;

    /**
     * Setter for <code>MONEY_TRANSFER_SCHEMA.ACCOUNT.ACCOUNT_ID</code>.
     */
    public void setAccountId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>MONEY_TRANSFER_SCHEMA.ACCOUNT.ACCOUNT_ID</code>.
     */
    public Long getAccountId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MONEY_TRANSFER_SCHEMA.ACCOUNT.ACCOUNT_INFO</code>.
     */
    public void setAccountInfo(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>MONEY_TRANSFER_SCHEMA.ACCOUNT.ACCOUNT_INFO</code>.
     */
    public String getAccountInfo() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.ACCOUNT_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccountInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(Long value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(String value) {
        setAccountInfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long accountId, String accountInfo) {
        super(Account.ACCOUNT);

        set(0, accountId);
        set(1, accountInfo);
    }
}
