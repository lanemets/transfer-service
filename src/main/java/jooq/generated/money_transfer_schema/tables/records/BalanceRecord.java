/*
 * This file is generated by jOOQ.
*/
package jooq.generated.money_transfer_schema.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import jooq.generated.money_transfer_schema.tables.Balance;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BalanceRecord extends UpdatableRecordImpl<BalanceRecord> implements Record4<Long, Long, BigDecimal, String> {

    private static final long serialVersionUID = -1858791995;

    /**
     * Setter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.BALANCE_ID</code>.
     */
    public void setBalanceId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.BALANCE_ID</code>.
     */
    public Long getBalanceId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.ACCOUNT_ID</code>.
     */
    public void setAccountId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.ACCOUNT_ID</code>.
     */
    public Long getAccountId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.ACCOUNT_BALANCE</code>.
     */
    public void setAccountBalance(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.ACCOUNT_BALANCE</code>.
     */
    public BigDecimal getAccountBalance() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.CURRENCY_CODE</code>.
     */
    public void setCurrencyCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>MONEY_TRANSFER_SCHEMA.BALANCE.CURRENCY_CODE</code>.
     */
    public String getCurrencyCode() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, BigDecimal, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, BigDecimal, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Balance.BALANCE.BALANCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Balance.BALANCE.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Balance.BALANCE.ACCOUNT_BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Balance.BALANCE.CURRENCY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getBalanceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAccountBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCurrencyCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value1(Long value) {
        setBalanceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value2(Long value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value3(BigDecimal value) {
        setAccountBalance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord value4(String value) {
        setCurrencyCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BalanceRecord values(Long value1, Long value2, BigDecimal value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BalanceRecord
     */
    public BalanceRecord() {
        super(Balance.BALANCE);
    }

    /**
     * Create a detached, initialised BalanceRecord
     */
    public BalanceRecord(Long balanceId, Long accountId, BigDecimal accountBalance, String currencyCode) {
        super(Balance.BALANCE);

        set(0, balanceId);
        set(1, accountId);
        set(2, accountBalance);
        set(3, currencyCode);
    }
}
